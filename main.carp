(load "config.carp")

(load "lib/tonc.carp")

(load "src/interfaces.carp")
(load "src/assets.carp")
(load "src/models.carp")
(load "src/collisions.carp")
(load "src/update.carp")
(load "src/render.carp")

(defn main []
 (do
  (Assets.init)
  (with Display
    (control (bit-or mode0 (bit-or background0 (bit-or object object-1d)))))
  (with Background
   (do
    (control (Zero) (bit-or (cbb 0) (bit-or (sbb 30) (bit-or bg-8bpp bg-32-32))))
    (control-offset (Zero) 0 10)))
  (Object.oam-init)
  (let [world (World.new)]
    (while-do true
     (Key.poll)
     (set! world (update world))
     (Video.vsync)
     (render &world)))))
