(load "config.carp")

(load "lib/tonc.carp")

(load "src/interfaces.carp")
(load "src/assets.carp")
(load "src/models.carp")
(load "src/collisions.carp")
(load "src/update.carp")
(load "src/render.carp")

(defn main []
 (do
  (Assets.init)
  (with Display
    (control (bit-or* mode0  background0  background1 object object-1d)))
  (with Background
   (do
    (control (Zero) (bit-or* (cbb 0) (sbb 30) bg-8bpp bg-32-32 (priority 1)))
    (control (One) (bit-or* (cbb 1) (sbb 31) bg-8bpp bg-32-32 (priority 0)))))
  (Object.oam-init)
  (let [world (World.new)]
    (forever-do
     (Key.poll)
     (set! world (update world))
     (Video.vsync)
     (render &world)))))
