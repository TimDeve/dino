(load "config.carp")

(load "lib/tonc.carp")

(load "src/interfaces.carp")
(load "src/assets.carp")
(load "src/models.carp")
(load "src/collisions.carp")
(load "src/update.carp")
(load "src/render.carp")

(defn main []
 (do
  (Interrupt.init)
  (Interrupt.enable-vblank)
  (Assets.init)
  (with Display
    (control (bit-or* mode0 background0 background1 background2 background3 object object-1d)))
  (Text.init (Background.Three) (Assets.text-cbb) (Assets.text-sbb))
  (Object.oam-init)
  (let [world (World.new)]
    (forever-do
     (Key.poll)
     (set! world (update world))
     (Interrupt.vsync)
     (render &world)))))
